<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from mir.urdf.xacro                 | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="mir_250">
  <!--
    Base UR robot series xacro macro.

    NOTE this is NOT a URDF. It cannot directly be loaded by consumers
    expecting a flattened '.urdf' file. See the top-level '.xacro' for that
    (but note that .xacro must still be processed by the xacro command).

    This file models the base kinematic chain of a UR robot, which then gets
    parameterised by various configuration files to convert it into a UR3(e),
    UR5(e), UR10(e) or UR16e.

    NOTE the default kinematic parameters (i.e., link lengths, frame locations,
    offsets, etc) do not correspond to any particular robot. They are defaults
    only. There WILL be non-zero offsets between the Forward Kinematics results
    in TF (i.e., robot_state_publisher) and the values reported by the Teach
    Pendant.

    For accurate (and robot-specific) transforms, the 'kinematics_parameters_file'
    parameter MUST point to a .yaml file containing the appropriate values for
    the targeted robot.

    If using the UniversalRobots/Universal_Robots_ROS_Driver, follow the steps
    described in the readme of that repository to extract the kinematic
    calibration from the controller and generate the required .yaml file.

    Main author of the migration to yaml configs Ludovic Delval.

    Contributors to previous versions (in no particular order)

     - Denis Stogl
     - Lovro Ivanov
     - Felix Messmer
     - Kelsey Hawkins
     - Wim Meeussen
     - Shaun Edwards
     - Nadia Hammoudeh Garcia
     - Dave Hershberger
     - G. vd. Hoorn
     - Philip Long
     - Dave Coleman
     - Miguel Prada
     - Mathias Luedtke
     - Marcel Schnirring
     - Felix von Drigalski
     - Felix Exner
     - Jimmy Da Silva
     - Ajit Krisshna N L
     - Muhammad Asif Rana
  -->
  <!--
    NOTE the macro defined in this file is NOT part of the public API of this
          package. Users CANNOT rely on this file being available, or stored in
          this location. Nor can they rely on the existence of the macro.
  -->
  <link name="base_footprint"/>
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <link name="base_link">
    <inertial>
      <mass value="97.0"/>
      <origin rpy="0 0 0" xyz="-0.054485000000000006 0.0 0.15"/>
      <inertia ixx="1.050832913" ixy="0.0" ixz="0.0" iyy="2.344165729" iyz="0.0" izz="2.7483322339999994"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="-0.004485 0 0"/>
      <geometry>
        <!--mesh filename="package://mir_description/meshes/visual/mir_100_base.stl" /-->
        <mesh filename="package://mir_description/meshes/visual/mir_250_base.stl"/>
      </geometry>
      <!--xacro:insert_block name="material_white" /-->
      <material name="light_grey">
        <color rgba="0.6 0.6 0.6 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.004485 0 0"/>
      <geometry>
        <!--mesh filename="file://mir_description/meshes/collision/mir_100_base.stl" /-->
        <mesh filename="package://mir_description/meshes/collision/mir_250_base.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="base_link">
    <!--material>Gazebo/White</material-->
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- IMU -->
  <joint name="base_link_to_imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.25"/>
    <!-- same as real MiR -->
  </joint>
  <link name="imu_link"/>
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>50.0</update_rate>
      <visualize>true</visualize>
      <topic>imu_data</topic>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.00017</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.00017</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.00017</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.00017</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.00017</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.00017</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <!-- <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">

        <initial_orientation_as_reference>false</initial_orientation_as_reference>
          <ros>
            <namespace>${imu_topic}</namespace>
            <remapping>~/out:=data</remapping>
            <frame_name>${imu_frame}</frame_name>  
          </ros>
        </plugin> -->
    </sensor>
  </gazebo>
  <!-- Create an alias for imu_link. This is necessary because the real MiR's
         TF has imu_link, but the imu_data topic is published in the imu_frame
         frame. -->
  <joint name="imu_link_to_imu_frame_joint" type="fixed">
    <parent link="imu_link"/>
    <child link="imu_frame"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <link name="imu_frame"/>
  <!-- Laser scanners -->
  <!-- virtual link for merged laserscan-->
  <joint name="base_link_to_virtual_laser_joint" type="fixed">
    <parent link="base_link"/>
    <child link="virtual_laser_link"/>
    <origin rpy="0.0 0.0 0" xyz="0.0 0.0 0.25"/>
  </joint>
  <link name="virtual_laser_link">
    </link>
  <joint name="base_link_to_front_laser_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_laser_link"/>
    <!--origin xyz="0.3564 0.2064 0.1914" rpy="0.0 0.0 ${0.25 * pi}" /-->
    <!-- MiR 250 Rviz-->
    <origin rpy="0.0 0.0 0.7853981633974483" xyz="0.3164 0.2064 0.1914"/>
    <!-- MiR 250 CAD-->
    <!--origin xyz="0.4288 0.2358 0.1914" rpy="0.0 0.0 ${0.25 * pi}" /-->
    <!-- from visually matching up the meshes of the MiR and the laser scanner -->
  </joint>
  <link name="front_laser_link">
    <visual>
      <origin rpy="3.141592653589793 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/sick_lms-100.stl"/>
      </geometry>
      <!-- <xacro:insert_block name="material_yellow" /> -->
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="3.141592653589793 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/sick_lms-100.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.009708329449999999" ixy="0.0" ixz="0.0" iyy="0.0097601627626" iyz="0.0" izz="0.0080601634426"/>
    </inertial>
  </link>
  <gazebo reference="front_laser_link">
    <!-- <material value="Gazebo/Yellow" /> -->
    <material value="Gazebo/FlatBlack"/>
    <!-- <sensor type="ray" name="${prefix}${link}">
        <visualize>false</visualize>
        <update_rate>12.5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>541</samples>
              <resolution>1</resolution>  
              <min_angle>-2.09438</min_angle>
              <max_angle>2.09438</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.05</min>
            <max>29.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_${link}_controller" filename="libgazebo_ros_ray_sensor.so">    

          <ros>
            <remapping>~/out:=${prefix}${topic}</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>${prefix}${link}</frame_name>
        </plugin>
      </sensor> -->
    <sensor name="front_laser_link" type="gpu_lidar">
      &quot;
        
      <pose relative_to="front_laser_link">0 0 0 0 0 0</pose>
      <topic>f_scan</topic>
      <update_rate>12.5</update_rate>
      <lidar>
        <scan>
          <horizontal>
            <samples>541</samples>
            <resolution>1</resolution>
            <min_angle>-2.09438</min_angle>
            <max_angle>2.09438</max_angle>
          </horizontal>
          <!-- <vertical>
                    <samples>1</samples>
                    <resolution>0.01</resolution>
                    <min_angle>0</min_angle>
                    <max_angle>0</max_angle>
                </vertical> -->
        </scan>
        <range>
          <min>0.05</min>
          <max>29.0</max>
          <resolution>0.01</resolution>
        </range>
      </lidar>
      <always_on>1</always_on>
      <visualize>true</visualize>
    </sensor>
  </gazebo>
  <joint name="base_link_to_back_laser_joint" type="fixed">
    <parent link="base_link"/>
    <child link="back_laser_link"/>
    <!--origin xyz="-0.2764 -0.2064 0.1914" rpy="0.0 0.0 ${-0.75 * pi}" /-->
    <!-- MiR 250 Rviz-->
    <origin rpy="0.0 0.0 -2.356194490192345" xyz="-0.3164 -0.2064 0.1914"/>
    <!-- MiR 250 CAD-->
    <!--origin xyz="-0.3548 -0.2352 0.1914" rpy="0.0 0.0 ${-0.75 * pi}" /-->
    <!-- from visually matching up the meshes of the MiR and the laser scanner -->
  </joint>
  <link name="back_laser_link">
    <visual>
      <origin rpy="3.141592653589793 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/sick_lms-100.stl"/>
      </geometry>
      <!-- <xacro:insert_block name="material_yellow" /> -->
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="3.141592653589793 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/sick_lms-100.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.009708329449999999" ixy="0.0" ixz="0.0" iyy="0.0097601627626" iyz="0.0" izz="0.0080601634426"/>
    </inertial>
  </link>
  <gazebo reference="back_laser_link">
    <!-- <material value="Gazebo/Yellow" /> -->
    <material value="Gazebo/FlatBlack"/>
    <!-- <sensor type="ray" name="${prefix}${link}">
        <visualize>false</visualize>
        <update_rate>12.5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>541</samples>
              <resolution>1</resolution>  
              <min_angle>-2.09438</min_angle>
              <max_angle>2.09438</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.05</min>
            <max>29.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_${link}_controller" filename="libgazebo_ros_ray_sensor.so">    

          <ros>
            <remapping>~/out:=${prefix}${topic}</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>${prefix}${link}</frame_name>
        </plugin>
      </sensor> -->
    <sensor name="back_laser_link" type="gpu_lidar">
      &quot;
        
      <pose relative_to="back_laser_link">0 0 0 0 0 0</pose>
      <topic>b_scan</topic>
      <update_rate>12.5</update_rate>
      <lidar>
        <scan>
          <horizontal>
            <samples>541</samples>
            <resolution>1</resolution>
            <min_angle>-2.09438</min_angle>
            <max_angle>2.09438</max_angle>
          </horizontal>
          <!-- <vertical>
                    <samples>1</samples>
                    <resolution>0.01</resolution>
                    <min_angle>0</min_angle>
                    <max_angle>0</max_angle>
                </vertical> -->
        </scan>
        <range>
          <min>0.05</min>
          <max>29.0</max>
          <resolution>0.01</resolution>
        </range>
      </lidar>
      <always_on>1</always_on>
      <visualize>true</visualize>
    </sensor>
  </gazebo>
  <!-- Ultrasound sensors -->
  <joint name="us_1_joint" type="fixed">
    <!-- right ultrasound -->
    <parent link="base_link"/>
    <child link="us_1_frame"/>
    <origin rpy="0 0 0" xyz="0.45 -0.12 0.16 "/>
    <!-- from visually matching to the mesh of the MiR -->
  </joint>
  <link name="us_1_frame"/>
  <joint name="us_2_joint" type="fixed">
    <!-- left ultrasound -->
    <parent link="base_link"/>
    <child link="us_2_frame"/>
    <origin rpy="0 0 0" xyz="0.45 0.12 0.16 "/>
    <!-- from visually matching to the mesh of the MiR -->
  </joint>
  <link name="us_2_frame"/>
  <joint name="left_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 0.2015 0.1"/>
    <parent link="base_link"/>
    <child link="left_wheel_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="250" velocity="20.0"/>
    <!-- <dynamics damping="0.0" friction="0.0"/> -->
    <!-- <gazebo reference="${prefix}${locationprefix}_wheel_joint">
        <implicitSpringDamper>1</implicitSpringDamper>
      </gazebo> -->
  </joint>
  <link name="left_wheel_link">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0026203322852000007" ixy="0.0" ixz="0.0" iyy="0.0026203322852000007" iyz="0.0" izz="0.005000000000000001"/>
    </inertial>
    <visual>
      <!--origin xyz="0 0 0" rpy="0 0 0" /-->
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <!--mesh filename="package://mir_description/meshes/visual/wheel.stl" /-->
        <cylinder length="0.038" radius="0.1"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.038" radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="left_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <!-- set the gazebo friction parameters for the wheels -->
  <gazebo reference="left_wheel_link">
    <!-- <mu1>1.6</mu1>
      <mu2>1.6</mu2>
      <min_depth>0.01</min_depth> -->
    <collision name="left_wheel_link_collision">
      <surface>
        <friction>
          <ode>
            <!-- <mu>300.0</mu>
                <mu2>300.0</mu2>
                <fdir1>0 0 1</fdir1> -->
            <mu>300.0</mu>
            <mu2>300.0</mu2>
            <fdir1>0 0 1</fdir1>
            <!-- <slip1>0</slip1>
                <slip2>0</slip2> -->
          </ode>
          <torsional>
            <coefficient>300</coefficient>
            <use_patch_radius>false</use_patch_radius>
            <surface_radius>0.1</surface_radius>
          </torsional>
        </friction>
        <contact>
          <ode>
            <!-- <soft_cfm>0.0</soft_cfm>
                <soft_erp>0.2</soft_erp> -->
            <!-- <kp>10000000.0</kp>
                <kd>1.0</kd>
                <max_vel>0.01</max_vel> -->
            <min_depth>0.001</min_depth>
            <!-- depth needed to have contact friction-->
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>
  <joint name="right_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 -0.2015 0.1"/>
    <parent link="base_link"/>
    <child link="right_wheel_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="250" velocity="20.0"/>
    <!-- <dynamics damping="0.0" friction="0.0"/> -->
    <!-- <gazebo reference="${prefix}${locationprefix}_wheel_joint">
        <implicitSpringDamper>1</implicitSpringDamper>
      </gazebo> -->
  </joint>
  <link name="right_wheel_link">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0026203322852000007" ixy="0.0" ixz="0.0" iyy="0.0026203322852000007" iyz="0.0" izz="0.005000000000000001"/>
    </inertial>
    <visual>
      <!--origin xyz="0 0 0" rpy="0 0 0" /-->
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <!--mesh filename="package://mir_description/meshes/visual/wheel.stl" /-->
        <cylinder length="0.038" radius="0.1"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.038" radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="right_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <!-- set the gazebo friction parameters for the wheels -->
  <gazebo reference="right_wheel_link">
    <!-- <mu1>1.6</mu1>
      <mu2>1.6</mu2>
      <min_depth>0.01</min_depth> -->
    <collision name="right_wheel_link_collision">
      <surface>
        <friction>
          <ode>
            <!-- <mu>300.0</mu>
                <mu2>300.0</mu2>
                <fdir1>0 0 1</fdir1> -->
            <mu>300.0</mu>
            <mu2>300.0</mu2>
            <fdir1>0 0 1</fdir1>
            <!-- <slip1>0</slip1>
                <slip2>0</slip2> -->
          </ode>
          <torsional>
            <coefficient>300</coefficient>
            <use_patch_radius>false</use_patch_radius>
            <surface_radius>0.1</surface_radius>
          </torsional>
        </friction>
        <contact>
          <ode>
            <!-- <soft_cfm>0.0</soft_cfm>
                <soft_erp>0.2</soft_erp> -->
            <!-- <kp>10000000.0</kp>
                <kd>1.0</kd>
                <max_vel>0.01</max_vel> -->
            <min_depth>0.001</min_depth>
            <!-- depth needed to have contact friction-->
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>
  <!-- caster hub -->
  <joint name="fl_caster_rotation_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.3037 0.188 0.1565"/>
    <parent link="base_link"/>
    <child link="fl_caster_rotation_link"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <!-- <gazebo>
      <plugin name="${locationprefix}_caster_rotation_joint_states" filename="libgazebo_ros_joint_state_publisher.so">
        <ros>
          <namespace>${ns}</namespace>
        </ros>
        <update_rate>200.0</update_rate>
        <joint_name>${prefix}${locationprefix}_caster_rotation_joint</joint_name>
      </plugin>
    </gazebo> -->
  <link name="fl_caster_rotation_link">
    <inertial>
      <!-- <origin xyz="0 0 -0.042500000044" rpy="${0.5 * pi} ${24 * deg_to_rad} ${1.5 * pi}" /> -->
      <origin rpy="0.41887903200000004 0 1.5707963267948966 " xyz="0 0 -0.042500000044"/>
      <mass value="0.3097539019"/>
      <inertia ixx="0.0005844517978" ixy="0" ixz="0" iyy="0.00052872551237" iyz="0" izz="0.00017923555074"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/caster_wheel_base.stl"/>
      </geometry>
      <material name="silver">
        <color rgba="0.79 0.82 0.93 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/collision/caster_wheel_base.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="fl_caster_rotation_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- caster wheel -->
  <joint name="fl_caster_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.0382 0 -0.094"/>
    <parent link="fl_caster_rotation_link"/>
    <child link="fl_caster_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- 
    <gazebo>
      <plugin name="${locationprefix}_caster_wheel_joint_states" filename="libignition-gazebo-joint-state-publisher.so"> 

        <ros>
          <namespace>${ns}</namespace>
        </ros>
        <update_rate>200.0</update_rate>
        <joint_name>${prefix}${locationprefix}_caster_wheel_joint</joint_name>
      </plugin>
    </gazebo> -->
  <link name="fl_caster_wheel_link">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.001061895408575" ixy="0.0" ixz="0.0" iyy="0.001061895408575" iyz="0.0" izz="0.001953125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/wheel.stl"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- <cylinder radius="${mir_100_caster_wheel_radius}" length="${mir_100_caster_wheel_width}" /> -->
        <cylinder length="0.00001" radius="0.0625"/>
        <!-- <sphere radius="${mir_100_caster_wheel_radius}" /> -->
      </geometry>
    </collision>
  </link>
  <gazebo reference="fl_caster_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <!-- set the gazebo friction parameters for the wheels -->
  <gazebo reference="fl_caster_wheel_link">
    <collision name="fl_caster_wheel_link_collision">
      <surface>
        <friction>
          <ode>
            <mu>1.0</mu>
            <mu2>1.0</mu2>
            <fdir1>0 0 1</fdir1>
            <slip1>0.0</slip1>
            <slip2>0.5</slip2>
          </ode>
          <!-- <torsional>
                <coefficient>1.0</coefficient>
                <use_patch_radius>false</use_patch_radius>
                <surface_radius>${mir_100_caster_wheel_radius}</surface_radius>
              </torsional> -->
        </friction>
        <contact>
          <ode>
            <!-- <soft_cfm>0.0</soft_cfm>
                <soft_erp>0.2</soft_erp> -->
            <kp>100000000.0</kp>
            <!--<kd>1.0</kd> -->
            <!-- <max_vel>1.0</max_vel> -->
            <min_depth>0.0</min_depth>
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>
  <!-- caster hub -->
  <joint name="fr_caster_rotation_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.3037 -0.188 0.1565"/>
    <parent link="base_link"/>
    <child link="fr_caster_rotation_link"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <!-- <gazebo>
      <plugin name="${locationprefix}_caster_rotation_joint_states" filename="libgazebo_ros_joint_state_publisher.so">
        <ros>
          <namespace>${ns}</namespace>
        </ros>
        <update_rate>200.0</update_rate>
        <joint_name>${prefix}${locationprefix}_caster_rotation_joint</joint_name>
      </plugin>
    </gazebo> -->
  <link name="fr_caster_rotation_link">
    <inertial>
      <!-- <origin xyz="0 0 -0.042500000044" rpy="${0.5 * pi} ${24 * deg_to_rad} ${1.5 * pi}" /> -->
      <origin rpy="0.41887903200000004 0 1.5707963267948966 " xyz="0 0 -0.042500000044"/>
      <mass value="0.3097539019"/>
      <inertia ixx="0.0005844517978" ixy="0" ixz="0" iyy="0.00052872551237" iyz="0" izz="0.00017923555074"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/caster_wheel_base.stl"/>
      </geometry>
      <material name="silver">
        <color rgba="0.79 0.82 0.93 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/collision/caster_wheel_base.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="fr_caster_rotation_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- caster wheel -->
  <joint name="fr_caster_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.0382 0 -0.094"/>
    <parent link="fr_caster_rotation_link"/>
    <child link="fr_caster_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- 
    <gazebo>
      <plugin name="${locationprefix}_caster_wheel_joint_states" filename="libignition-gazebo-joint-state-publisher.so"> 

        <ros>
          <namespace>${ns}</namespace>
        </ros>
        <update_rate>200.0</update_rate>
        <joint_name>${prefix}${locationprefix}_caster_wheel_joint</joint_name>
      </plugin>
    </gazebo> -->
  <link name="fr_caster_wheel_link">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.001061895408575" ixy="0.0" ixz="0.0" iyy="0.001061895408575" iyz="0.0" izz="0.001953125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/wheel.stl"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- <cylinder radius="${mir_100_caster_wheel_radius}" length="${mir_100_caster_wheel_width}" /> -->
        <cylinder length="0.00001" radius="0.0625"/>
        <!-- <sphere radius="${mir_100_caster_wheel_radius}" /> -->
      </geometry>
    </collision>
  </link>
  <gazebo reference="fr_caster_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <!-- set the gazebo friction parameters for the wheels -->
  <gazebo reference="fr_caster_wheel_link">
    <collision name="fr_caster_wheel_link_collision">
      <surface>
        <friction>
          <ode>
            <mu>1.0</mu>
            <mu2>1.0</mu2>
            <fdir1>0 0 1</fdir1>
            <slip1>0.0</slip1>
            <slip2>0.5</slip2>
          </ode>
          <!-- <torsional>
                <coefficient>1.0</coefficient>
                <use_patch_radius>false</use_patch_radius>
                <surface_radius>${mir_100_caster_wheel_radius}</surface_radius>
              </torsional> -->
        </friction>
        <contact>
          <ode>
            <!-- <soft_cfm>0.0</soft_cfm>
                <soft_erp>0.2</soft_erp> -->
            <kp>100000000.0</kp>
            <!--<kd>1.0</kd> -->
            <!-- <max_vel>1.0</max_vel> -->
            <min_depth>0.0</min_depth>
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>
  <!-- caster hub -->
  <joint name="bl_caster_rotation_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.296 0.188 0.1565"/>
    <parent link="base_link"/>
    <child link="bl_caster_rotation_link"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <!-- <gazebo>
      <plugin name="${locationprefix}_caster_rotation_joint_states" filename="libgazebo_ros_joint_state_publisher.so">
        <ros>
          <namespace>${ns}</namespace>
        </ros>
        <update_rate>200.0</update_rate>
        <joint_name>${prefix}${locationprefix}_caster_rotation_joint</joint_name>
      </plugin>
    </gazebo> -->
  <link name="bl_caster_rotation_link">
    <inertial>
      <!-- <origin xyz="0 0 -0.042500000044" rpy="${0.5 * pi} ${24 * deg_to_rad} ${1.5 * pi}" /> -->
      <origin rpy="0.41887903200000004 0 1.5707963267948966 " xyz="0 0 -0.042500000044"/>
      <mass value="0.3097539019"/>
      <inertia ixx="0.0005844517978" ixy="0" ixz="0" iyy="0.00052872551237" iyz="0" izz="0.00017923555074"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/caster_wheel_base.stl"/>
      </geometry>
      <material name="silver">
        <color rgba="0.79 0.82 0.93 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/collision/caster_wheel_base.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="bl_caster_rotation_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- caster wheel -->
  <joint name="bl_caster_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.0382 0 -0.094"/>
    <parent link="bl_caster_rotation_link"/>
    <child link="bl_caster_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- 
    <gazebo>
      <plugin name="${locationprefix}_caster_wheel_joint_states" filename="libignition-gazebo-joint-state-publisher.so"> 

        <ros>
          <namespace>${ns}</namespace>
        </ros>
        <update_rate>200.0</update_rate>
        <joint_name>${prefix}${locationprefix}_caster_wheel_joint</joint_name>
      </plugin>
    </gazebo> -->
  <link name="bl_caster_wheel_link">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.001061895408575" ixy="0.0" ixz="0.0" iyy="0.001061895408575" iyz="0.0" izz="0.001953125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/wheel.stl"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- <cylinder radius="${mir_100_caster_wheel_radius}" length="${mir_100_caster_wheel_width}" /> -->
        <cylinder length="0.00001" radius="0.0625"/>
        <!-- <sphere radius="${mir_100_caster_wheel_radius}" /> -->
      </geometry>
    </collision>
  </link>
  <gazebo reference="bl_caster_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <!-- set the gazebo friction parameters for the wheels -->
  <gazebo reference="bl_caster_wheel_link">
    <collision name="bl_caster_wheel_link_collision">
      <surface>
        <friction>
          <ode>
            <mu>1.0</mu>
            <mu2>1.0</mu2>
            <fdir1>0 0 1</fdir1>
            <slip1>0.0</slip1>
            <slip2>0.5</slip2>
          </ode>
          <!-- <torsional>
                <coefficient>1.0</coefficient>
                <use_patch_radius>false</use_patch_radius>
                <surface_radius>${mir_100_caster_wheel_radius}</surface_radius>
              </torsional> -->
        </friction>
        <contact>
          <ode>
            <!-- <soft_cfm>0.0</soft_cfm>
                <soft_erp>0.2</soft_erp> -->
            <kp>100000000.0</kp>
            <!--<kd>1.0</kd> -->
            <!-- <max_vel>1.0</max_vel> -->
            <min_depth>0.0</min_depth>
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>
  <!-- caster hub -->
  <joint name="br_caster_rotation_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.296 -0.188 0.1565"/>
    <parent link="base_link"/>
    <child link="br_caster_rotation_link"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <!-- <gazebo>
      <plugin name="${locationprefix}_caster_rotation_joint_states" filename="libgazebo_ros_joint_state_publisher.so">
        <ros>
          <namespace>${ns}</namespace>
        </ros>
        <update_rate>200.0</update_rate>
        <joint_name>${prefix}${locationprefix}_caster_rotation_joint</joint_name>
      </plugin>
    </gazebo> -->
  <link name="br_caster_rotation_link">
    <inertial>
      <!-- <origin xyz="0 0 -0.042500000044" rpy="${0.5 * pi} ${24 * deg_to_rad} ${1.5 * pi}" /> -->
      <origin rpy="0.41887903200000004 0 1.5707963267948966 " xyz="0 0 -0.042500000044"/>
      <mass value="0.3097539019"/>
      <inertia ixx="0.0005844517978" ixy="0" ixz="0" iyy="0.00052872551237" iyz="0" izz="0.00017923555074"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/caster_wheel_base.stl"/>
      </geometry>
      <material name="silver">
        <color rgba="0.79 0.82 0.93 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/collision/caster_wheel_base.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="br_caster_rotation_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- caster wheel -->
  <joint name="br_caster_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.0382 0 -0.094"/>
    <parent link="br_caster_rotation_link"/>
    <child link="br_caster_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- 
    <gazebo>
      <plugin name="${locationprefix}_caster_wheel_joint_states" filename="libignition-gazebo-joint-state-publisher.so"> 

        <ros>
          <namespace>${ns}</namespace>
        </ros>
        <update_rate>200.0</update_rate>
        <joint_name>${prefix}${locationprefix}_caster_wheel_joint</joint_name>
      </plugin>
    </gazebo> -->
  <link name="br_caster_wheel_link">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.001061895408575" ixy="0.0" ixz="0.0" iyy="0.001061895408575" iyz="0.0" izz="0.001953125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/wheel.stl"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- <cylinder radius="${mir_100_caster_wheel_radius}" length="${mir_100_caster_wheel_width}" /> -->
        <cylinder length="0.00001" radius="0.0625"/>
        <!-- <sphere radius="${mir_100_caster_wheel_radius}" /> -->
      </geometry>
    </collision>
  </link>
  <gazebo reference="br_caster_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <!-- set the gazebo friction parameters for the wheels -->
  <gazebo reference="br_caster_wheel_link">
    <collision name="br_caster_wheel_link_collision">
      <surface>
        <friction>
          <ode>
            <mu>1.0</mu>
            <mu2>1.0</mu2>
            <fdir1>0 0 1</fdir1>
            <slip1>0.0</slip1>
            <slip2>0.5</slip2>
          </ode>
          <!-- <torsional>
                <coefficient>1.0</coefficient>
                <use_patch_radius>false</use_patch_radius>
                <surface_radius>${mir_100_caster_wheel_radius}</surface_radius>
              </torsional> -->
        </friction>
        <contact>
          <ode>
            <!-- <soft_cfm>0.0</soft_cfm>
                <soft_erp>0.2</soft_erp> -->
            <kp>100000000.0</kp>
            <!--<kd>1.0</kd> -->
            <!-- <max_vel>1.0</max_vel> -->
            <min_depth>0.0</min_depth>
          </ode>
        </contact>
      </surface>
    </collision>
  </gazebo>
  <joint name="base_link_surface_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.004485 0 0.352"/>
    <parent link="base_link"/>
    <child link="surface"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="surface"/>
  <!-- <joint name="${prefix}power_unit_joint" type="fixed">
      <parent link="${prefix}base_link" />
      <child link="${prefix}power_unit" />
      <origin xyz="0 0 0.3" rpy="0 0 0" />
    </joint>

    <link name="${prefix}power_unit">
      <visual>
        <origin xyz="0 0 0.2" rpy="0 0 0" />
        <geometry>
          <box size="0.73 0.56 0.4"/>
        </geometry>
        <xacro:insert_block name="material_light_grey" />
      </visual>
      <collision>
        <origin xyz="0 0 0.2" rpy="0 0 0" />
        <geometry>
          <box size="0.73 0.56 0.4"/>
       </geometry>
      </collision>
    </link> -->
  <!-- <xacro:arg name="name" default="ur"/> -->
  <!-- <xacro:arg name="ur_type" default="ur5e"/> -->
  <!-- parameters -->
  <!-- <xacro:arg name="tf_prefix" default="" />
     <xacro:arg name="joint_limit_params" default="$(find ur_description)/config/$(arg ur_type)/joint_limits.yaml"/>
     <xacro:arg name="kinematics_params" default="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml"/>
     <xacro:arg name="physical_params" default="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml"/>
     <xacro:arg name="visual_params" default="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml"/>
     <xacro:arg name="transmission_hw_interface" default=""/>
     <xacro:arg name="safety_limits" default="false"/>
     <xacro:arg name="safety_pos_margin" default="0.15"/>
     <xacro:arg name="safety_k_position" default="20"/> -->
  <!-- ros2_control related parameters -->
  <!-- <xacro:arg name="headless_mode" default="false" />
     <xacro:arg name="robot_ip" default="0.0.0.0" />
     <xacro:arg name="script_filename" default=""/>
     <xacro:arg name="output_recipe_filename" default=""/>
     <xacro:arg name="input_recipe_filename" default=""/>
     <xacro:arg name="reverse_ip" default="0.0.0.0"/>
     <xacro:arg name="script_command_port" default="50004"/>
     <xacro:arg name="reverse_port" default="50001"/>
     <xacro:arg name="script_sender_port" default="50002"/>
     <xacro:arg name="trajectory_port" default="50003"/> -->
  <!--   tool communication related parameters-->
  <!-- <xacro:arg name="use_tool_communication" default="false" />
     <xacro:arg name="tool_voltage" default="0" />
     <xacro:arg name="tool_parity" default="0" />
     <xacro:arg name="tool_baud_rate" default="115200" />
     <xacro:arg name="tool_stop_bits" default="1" />
     <xacro:arg name="tool_rx_idle_chars" default="1.5" />
     <xacro:arg name="tool_tx_idle_chars" default="3.5" />
     <xacro:arg name="tool_device_name" default="/tmp/ttyUR" />
     <xacro:arg name="tool_tcp_port" default="54321" /> -->
  <!-- Simulation parameters -->
  <!-- <xacro:arg name="use_mock_hardware" default="false" />
     <xacro:arg name="mock_sensor_commands" default="false" />
     <xacro:arg name="sim_gazebo" default="true" />
     <xacro:arg name="sim_ignition" default="false" />
     <xacro:arg name="simulation_controllers" default="" /> -->
  <!-- initial position for simulations (Mock Hardware, Gazebo, Ignition) -->
  <!-- <xacro:arg name="initial_positions_file" default="$(find ur_description)/config/initial_positions.yaml"/> -->
  <!-- convert to property to use substitution in function -->
  <!-- <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/>

    <xacro:ur_robot
     name="$(arg name)"
     tf_prefix="ur"
     parent="${prefix}base_link"
     joint_limits_parameters_file="$(arg joint_limit_params)"
     kinematics_parameters_file="$(arg kinematics_params)"
     physical_parameters_file="$(arg physical_params)"
     visual_parameters_file="$(arg visual_params)"
     transmission_hw_interface="$(arg transmission_hw_interface)"
     safety_limits="$(arg safety_limits)"
     safety_pos_margin="$(arg safety_pos_margin)"
     safety_k_position="$(arg safety_k_position)"
     use_mock_hardware="$(arg use_mock_hardware)"
     mock_sensor_commands="$(arg mock_sensor_commands)"
     sim_gazebo="$(arg sim_gazebo)"
     sim_ignition="$(arg sim_ignition)"
     headless_mode="$(arg headless_mode)"
     initial_positions="${xacro.load_yaml(initial_positions_file)}"
     use_tool_communication="$(arg use_tool_communication)"
     tool_voltage="$(arg tool_voltage)"
     tool_parity="$(arg tool_parity)"
     tool_baud_rate="$(arg tool_baud_rate)"
     tool_stop_bits="$(arg tool_stop_bits)"
     tool_rx_idle_chars="$(arg tool_rx_idle_chars)"
     tool_tx_idle_chars="$(arg tool_tx_idle_chars)"
     tool_device_name="$(arg tool_device_name)"
     tool_tcp_port="$(arg tool_tcp_port)"
     robot_ip="$(arg robot_ip)"
     script_filename="$(arg script_filename)"
     output_recipe_filename="$(arg output_recipe_filename)"
     input_recipe_filename="$(arg input_recipe_filename)"
     reverse_ip="$(arg reverse_ip)"
     script_command_port="$(arg script_command_port)"
     reverse_port="$(arg reverse_port)"
     script_sender_port="$(arg script_sender_port)"
     trajectory_port="$(arg trajectory_port)"
     >
     <origin xyz="0 0 0.7" rpy="0 0 0" />          
    </xacro:ur_robot> -->
  <!-- <xacro:diff_controller_plugin_gazebo prefix="${prefix}" ns="${ns}"
    left_wheel_joint="${prefix}left_wheel_joint"
    right_wheel_joint="${prefix}right_wheel_joint"
    wheel_separation="${2*mir_100_act_wheel_dy}"
    wheel_radius="${mir_100_act_wheel_radius}"/> -->
  <!-- <xacro:mir_ros2_control
    left_wheel_joint="${prefix}left_wheel_joint"
    right_wheel_joint="${prefix}right_wheel_joint"/>  -->
  <!-- <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control> -->
  <ros2_control name="IgnitionSystem" type="system">
    <hardware>
      <plugin>ign_ros2_control/IgnitionSystem</plugin>
    </hardware>
    <joint name="left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="fl_caster_rotation_joint">
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="fr_caster_rotation_joint">
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="bl_caster_rotation_joint">
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="br_caster_rotation_joint">
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="fl_caster_wheel_joint">
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="fr_caster_wheel_joint">
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="bl_caster_wheel_joint">
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="br_caster_wheel_joint">
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>
  <!-- <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <parameters>$(find mir_description)/config/diffdrive_controller.yaml</parameters>
    </plugin>
  </gazebo> -->
  <gazebo>
    <!-- Joint state publisher -->
    <plugin filename="ign_ros2_control-system" name="ign_ros2_control::IgnitionROS2ControlPlugin">
      <parameters>/home/rudresh/Downloads/mir_250_ros2_ign/install/mir_description/share/mir_description/config/diffdrive_controller.yaml</parameters>
    </plugin>
  </gazebo>
</robot>
